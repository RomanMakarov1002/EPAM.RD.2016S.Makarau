//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StorageSystemTester.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IWcfService")]
    public interface IWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/Add", ReplyAction="http://tempuri.org/IWcfService/AddResponse")]
        int Add(UserStorageSystem.Entities.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/Add", ReplyAction="http://tempuri.org/IWcfService/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(UserStorageSystem.Entities.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/SearchForUser", ReplyAction="http://tempuri.org/IWcfService/SearchForUserResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserStorageSystem.Entities.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserStorageSystem.Entities.Gender))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserStorageSystem.Entities.Visa[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserStorageSystem.Entities.Visa))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        int[] SearchForUser(object[] searchCriterias);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/SearchForUser", ReplyAction="http://tempuri.org/IWcfService/SearchForUserResponse")]
        System.Threading.Tasks.Task<int[]> SearchForUserAsync(object[] searchCriterias);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/Delete", ReplyAction="http://tempuri.org/IWcfService/DeleteResponse")]
        void Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/Delete", ReplyAction="http://tempuri.org/IWcfService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfServiceChannel : StorageSystemTester.ServiceReference.IWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfServiceClient : System.ServiceModel.ClientBase<StorageSystemTester.ServiceReference.IWcfService>, StorageSystemTester.ServiceReference.IWcfService {
        
        public WcfServiceClient() {
        }
        
        public WcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Add(UserStorageSystem.Entities.User user) {
            return base.Channel.Add(user);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(UserStorageSystem.Entities.User user) {
            return base.Channel.AddAsync(user);
        }
        
        public int[] SearchForUser(object[] searchCriterias) {
            return base.Channel.SearchForUser(searchCriterias);
        }
        
        public System.Threading.Tasks.Task<int[]> SearchForUserAsync(object[] searchCriterias) {
            return base.Channel.SearchForUserAsync(searchCriterias);
        }
        
        public void Delete(int id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
    }
}
